{"version":3,"sources":["./src/app/pages/quotes/quotes.page.html","./src/app/pages/quotes/quotes-routing.module.ts","./src/app/pages/quotes/quotes.module.ts","./src/app/pages/quotes/quotes.page.scss","./src/app/pages/quotes/quotes.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,ygBAA0c,eAAe,mD;;;;;;;;;;;;;;;;;;;ACA/b;AACc;AAEZ;AAE3C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uDAAU;KACtB;CACF,CAAC;AAMF,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;AAA1B,uBAAuB;IAJnC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBK;AACM;AACF;AAEA;AAEqB;AAEvB;AAW3C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAG;AAAnB,gBAAgB;IAT5B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,8EAAuB;SACxB;QACD,YAAY,EAAE,CAAC,uDAAU,CAAC;KAC3B,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;ACnB7B;AAAe,6GAA8C,+I;;;;;;;;;;;;;;;;;;;ACAX;AACT;AAGe;AAOxD,IAAa,UAAU,GAAvB,MAAa,UAAU;IAKrB,YAAoB,MAAc,EAAU,GAAe;QAAvC,WAAM,GAAN,MAAM,CAAQ;QAAU,QAAG,GAAH,GAAG,CAAY;QAF3D,WAAM,GAAG,EAAE,CAAC;IAEmD,CAAC;IAEhE,QAAQ;QACJ,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,UAAU;QAER,oCAAoC;QAClC,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YACrC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QAClB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gIAAgI;IAChI,WAAW,CAAC,KAAK;QAEb,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAEjC,IAAI,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE;YACrB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,OAAO;SACR;QAED,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,CAAC,EAAE,GAAG,CAAC,EAAE;YACT,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wDAAwD;IACxD,WAAW,CAAC,KAAK;QACf,IAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,OAAO,EAAE,CAAC,CAAC;IACvD,CAAC;CAEF;;YArC6B,sDAAM;YAAe,gEAAU;;AALhD,UAAU;IALtB,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,kNAAiC;;KAElC,CAAC;2EAM4B,sDAAM,EAAe,gEAAU;GALhD,UAAU,CA0CtB;AA1CsB","file":"quotes-quotes-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar color=\\\"success\\\">\\n\\t\\t<ion-title>Quotes <ion-icon name=\\\"book-outline\\\"></ion-icon> </ion-title> \\n\\t</ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-searchbar [(ngModel)]=\\\"author\\\" placeholder=\\\"Search Quote by Author\\\" (ionChange)=\\\"searchQuote($event)\\\">\\n    </ion-searchbar>\\n\\t\\n    <ion-list>\\n\\t\\t<ion-item button detail lines=\\\"inset\\\" *ngFor=\\\"let quote of quotes\\\" (click)=\\\"openDetails(quote)\\\">\\n\\t\\t\\t{{ quote.quote }}\\n\\t\\t</ion-item>\\n\\t</ion-list>\\n\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { QuotesPage } from './quotes.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuotesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class QuotesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { QuotesPageRoutingModule } from './quotes-routing.module';\n\nimport { QuotesPage } from './quotes.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    QuotesPageRoutingModule\n  ],\n  declarations: [QuotesPage]\n})\nexport class QuotesPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3F1b3Rlcy9xdW90ZXMucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\t\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiService } from '../../services/api.service';\n\n@Component({\n  selector: 'app-quotes',\n  templateUrl: './quotes.page.html',\n  styleUrls: ['./quotes.page.scss'],\n})\nexport class QuotesPage implements OnInit {\n\n  quotes: any;\n  author = '';\n\n  constructor(private router: Router, private api: ApiService) { }\n\n  ngOnInit() {\n      this.loadQuotes();\n  }\n\n  loadQuotes(){\n\n    //Bring all quotes from api services\n      this.api.getQuotes().subscribe(res => {\n      this.quotes = res;\n      });\n  }\n \n  // Method to search quote by name of the author - Code based on https://devdactic.com/ionic-4-pokedex-search-scroll/ explanation\n  searchQuote(event){\n      \n      this.author = event.target.value;\n\n      if (this.author == '') {\n        this.loadQuotes();\n        return;\n      }\n\n      this.api.getQuoteA(this.author).subscribe(data => {\n      this.quotes = data;\n      }, err => {\n      this.quotes = [];\n      });\n  }\n\n  // open quote details, passing the quote ID as parameter\n  openDetails(quote) {\n    let quoteId = quote.quote_id;\n    this.router.navigateByUrl(`/tabs/quotes/${quoteId}`);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}